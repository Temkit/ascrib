name: Deploy to EKS

on:
  push:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.ref == 'refs/heads/main' && 'ascrib-production' || 'ascrib-staging' }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kube config
        run: |
          aws eks --region eu-west-3 update-kubeconfig --name ${{ github.ref == 'refs/heads/main' && 'ascrib-cluster-production' || 'ascrib-cluster-staging' }}

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.ref == 'refs/heads/main' && 'ascrib-production' || 'ascrib-staging' }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          sed -i 's|${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}|'${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}'|' kubernetes/deployment.yaml
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
